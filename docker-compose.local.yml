# docker-compose.local.yml  (corrigido)
# Removi o campo "version" (obsoleto) para n√£o mostrar o WARN do Compose.

services:
  db:
    image: postgres:16-alpine
    container_name: dpa_db
    environment:
      POSTGRES_DB: dpa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - dpa_db_data:/var/lib/postgresql/data

  api:
    container_name: dpa_api
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      # Use as vari√°veis do seu .env local se preferir (env_file). Mantive expl√≠cito aqui.
      PORT: "3001"
      NODE_ENV: "development"
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/dpa?schema=public"
      JWT_SECRET: "supersecret_local"
      # STRIPE_* se usados no seu backend:
      # STRIPE_SECRET_KEY: "sk_test_..."
      # STRIPE_WEBHOOK_SECRET: "whsec_..."
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"

  web:
    container_name: dpa_web
    build:
      context: ./src
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "production"
      NEXT_PUBLIC_API_URL: "http://localhost:3001"
      # Se houver Stripe no frontend:
      # NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_..."
    depends_on:
      - api
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: dpa_prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=3d"
      - "--web.enable-remote-write-receiver"
    ports:
      - "9090:9090"
    # üîß Monte a PASTA inteira em vez do arquivo isolado:
    volumes:
      - ./observability/prometheus:/etc/prometheus:ro
    depends_on:
      - api

  grafana:
    image: grafana/grafana:10.4.2
    container_name: dpa_grafana
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3002:3000" # evita conflito com web (3000) e api (3001)
    volumes:
      # Provisionamento de datasources e dashboards (pastas do reposit√≥rio)
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      # Opcional: persistir dados do Grafana
      # - dpa_grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  dpa_db_data:
    driver: local
  # dpa_grafana_data:
  #   driver: local
